"use client";
import { AddToCalendarButtonType } from "add-to-calendar-button-react";
import { trackGoal } from "fathom-client";
import { AddToCalendarCard } from "../components/AddToCalendarCard";
import {
  Status,
  convertIcsToJson,
  generateIssueDescription,
  generateIssueTitle,
} from "../utils/utils";

export function Output({
  events,
  finished,
  isDev,
  issueStatus,
  setIssueStatus,
  lastAssistantMessage,
  lastUserMessage,
  reportIssue,
  setEvents,
  setTrackedAddToCalendarGoal,
  trackedAddToCalendarGoal,
}: {
  events: AddToCalendarButtonType[] | null;
  finished: boolean;
  isDev: boolean;
  issueStatus: Status;
  setIssueStatus: (status: Status) => void;
  lastAssistantMessage: string;
  lastUserMessage: string;
  reportIssue: (
    title: string,
    description: string,
    setIssueStatus: any
  ) => Promise<void>;
  setEvents: (events: AddToCalendarButtonType[] | null) => void;
  setTrackedAddToCalendarGoal: (trackedAddToCalendarGoal: boolean) => void;
  trackedAddToCalendarGoal: boolean;
}) {
  return (
    <output className="">
      {finished && (
        <>
          <div className="flex justify-center gap-4 flex-wrap">
            {events?.map((props, index) => (
              <AddToCalendarCard
                {...props}
                key={props.name}
                onClick={() => {
                  !trackedAddToCalendarGoal && trackGoal("BQ3VFDBF", 1);
                  setTrackedAddToCalendarGoal(true);
                }}
                setAddToCalendarButtonProps={(props) => {
                  const newArray = [...events];
                  newArray[index] = props;
                  setEvents(newArray);
                }}
              />
            ))}
          </div>
          {issueStatus === "submitting" && (
            <button
              className="bg-red-700 z-50 rounded-xl text-white font-medium px-4 py-2 w-40 fixed bottom-5 right-3"
              disabled
            >
              <span className="loading">
                <span style={{ backgroundColor: "white" }} />
                <span style={{ backgroundColor: "white" }} />
                <span style={{ backgroundColor: "white" }} />
              </span>
            </button>
          )}
          {issueStatus === "idle" && (
            <button
              className="bg-red-700 z-50 rounded-xl text-white font-medium px-4 py-2 hover:bg-red-800 w-40 fixed bottom-5 right-3"
              onClick={() =>
                reportIssue(
                  generateIssueTitle(lastUserMessage),
                  generateIssueDescription(
                    lastUserMessage,
                    lastAssistantMessage,
                    convertIcsToJson(lastAssistantMessage),
                    events
                  ),
                  setIssueStatus("submitting")
                )
              }
            >
              Report issue &rarr;
            </button>
          )}
          {issueStatus === "submitted" && (
            <button
              className="bg-red-700 z-50 rounded-xl text-white font-medium px-4 py-2 w-40 fixed bottom-5 right-3"
              disabled
            >
              ✔︎ Reported
            </button>
          )}
          {isDev && (
            <>
              <div className="space-y-8 flex flex-col items-center justify-center max-w-xl mx-auto">
                <div className="bg-white rounded-xl shadow-md p-4 hover:bg-gray-100 transition cursor-pointer border">
                  <p>Prompt</p>
                  <p>{lastUserMessage}</p>
                </div>
              </div>
              <div className="space-y-8 flex flex-col items-center justify-center max-w-xl mx-auto">
                <div
                  className="bg-white rounded-xl shadow-md p-4 hover:bg-gray-100 transition cursor-pointer border"
                  key={lastAssistantMessage}
                >
                  <p>Generated by ChatGPT</p>
                  <code>{lastAssistantMessage}</code>
                </div>
              </div>
              <div className="space-y-8 flex flex-col items-center justify-center max-w-xl mx-auto">
                <div className="bg-white rounded-xl shadow-md p-4 hover:bg-gray-100 transition cursor-pointer border">
                  <p>ICSJson</p>
                  <code>
                    {JSON.stringify(
                      convertIcsToJson(lastAssistantMessage),
                      null,
                      2
                    )}
                  </code>
                </div>
              </div>
              {events?.map((props) => (
                <div
                  className="space-y-8 flex flex-col items-center justify-center max-w-xl mx-auto"
                  key={`code-${props.name}`}
                >
                  <div className="bg-white rounded-xl shadow-md p-4 hover:bg-gray-100 transition cursor-pointer border">
                    <p>AddToCalendarButtonProps</p>
                    <code>{JSON.stringify(props, null, 2)}</code>
                  </div>
                </div>
              ))}
            </>
          )}
        </>
      )}
    </output>
  );
}
